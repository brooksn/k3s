name: K3s Release

on:
  release:
    types: [published]

permissions:
  id-token: write
  contents: read
  packages: write

jobs:
  build-amd64:
    name: Build Binary (amd64)
    uses: ./.github/workflows/build-k3s.yaml
    with:
      cache: '' # No cache for release builds
      upload-build: true

  build-arm64:
    name: Build Binary (arm64)
    uses: ./.github/workflows/build-k3s.yaml
    with:
      arch: arm64
      cache: '' # No cache for release builds
      upload-build: true

  build-arm:
    name: Build Binary (arm)
    uses: ./.github/workflows/build-k3s.yaml
    with:
      arch: arm
      cache: '' # No cache for release builds
      upload-build: true

  push-release-image:
    name: Build and Push Multi-Arch Image
    runs-on: ubuntu-latest
    permissions: 
      packages: write # Needed to push images to GHCR
      id-token: write # Needed for cosign OIDC
    needs: [build-amd64, build-arm64, build-arm]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: COnfigure image tags
        id: tag_config
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          
          # Base configuration - always transform the main tag
          # Transforms v1.32.4-rc1+k3s1 â†’ v1.32.4-rc1-k3s1
          BASE_CONFIG="type=raw,value=${TAG//+/-}"
          
          if [[ "${TAG,,}" == *"rc"* ]]; then
            echo "RC release detected: $TAG"
            echo "tag_spec=$BASE_CONFIG" >> $GITHUB_OUTPUT
          else
            echo "Stable release detected: $TAG"
            echo "tag_spec=$BASE_CONFIG
          type=semver,pattern=v{{major}}.{{minor}}" >> $GITHUB_OUTPUT
          fi

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/k3s
          flavor: latest=false
          tags: ${{ steps.tag_config.outputs.tag_spec }}
      
      - name: "Download K3s build"
        uses: actions/download-artifact@v4
        with:
          pattern: k3s*
          path: ./dist/artifacts
          merge-multiple: true

      - name: Prepare build folder
        run: |
          mkdir -p ./build/out
          cp ./dist/artifacts/data-* ./build/out

      - name: Build and push K3s runtime image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./package/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            DRONE_TAG=${{ github.ref_name }}

  sign-release-image:
    name: Sign Release Image
    runs-on: ubuntu-latest
    permissions:
      packages: write # Needed to push images to GHCR
      id-token: write # Needed for cosign OIDC
    needs:
      - push-release-image
    steps:
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.5.0

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Sign images
        run: |
          TAG="${{ github.ref_name }}"
          TAG=${TAG//+/-}
          IMG="ghcr.io/${{ github.repository_owner }}/k3s:${TAG}"
          cosign sign --oidc-provider=github-actions --yes "${IMG}"

  push-release-assets:
    name: Push Release Assets
    runs-on: ubuntu-latest
    permissions:
      packages: write # Needed to push images to GHCR
      id-token: write # Needed for cosign OIDC
    needs:
      - push-release-image
    steps:
      - name: Checkout K3s
        uses: actions/checkout@v4

      - name: Install ORAS
        uses: oras-project/setup-oras@v1

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.5.0

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download K3s binary
        uses: actions/download-artifact@v4
        with:
          pattern: k3s*
          path: ./dist/artifacts
          merge-multiple: true

      - name: Package airgap images
        run: |
          for arch in arm arm64 amd64; do
            ./scripts/package-airgap "${arch}"
          done

      - name: Bundle and upload assets to GHCR
        run: |
          TAG="${{ github.ref_name }}"
          TAG=${TAG//+/-}
          IMG="ghcr.io/${{ github.repository_owner }}/k3s-assets:${TAG}"
          oras push "${IMG}" ./dist/artifacts

      - name: Sign images
        run: |
          TAG="${{ github.ref_name }}"
          TAG=${TAG//+/-}
          IMG="ghcr.io/${{ github.repository_owner }}/k3s-assets:${TAG}"
          cosign sign --oidc-provider=github-actions --yes "${IMG}"
